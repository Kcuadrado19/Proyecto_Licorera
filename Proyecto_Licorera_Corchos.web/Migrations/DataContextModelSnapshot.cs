// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Licorera_Corchos.web.Data;

#nullable disable

namespace Proyecto_Licorera_Corchos.web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Accounting", b =>
                {
                    b.Property<int>("Id_Accounting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Accounting"));

                    b.Property<string>("Accounting_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Modification")
                        .HasColumnType("int");

                    b.Property<int>("ModificationsId_Modification")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Accounting");

                    b.HasIndex("ModificationsId_Modification");

                    b.ToTable("Accounting");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Clients", b =>
                {
                    b.Property<int>("Id_Client")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Client"));

                    b.Property<string>("Client_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Client");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Modifications", b =>
                {
                    b.Property<int>("Id_Modification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Modification"));

                    b.Property<string>("Modification_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Modification");

                    b.ToTable("Modifications");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Orders", b =>
                {
                    b.Property<int>("Id_Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Order"));

                    b.Property<int?>("Contact")
                        .HasColumnType("int");

                    b.Property<int>("Id_Accounting")
                        .HasColumnType("int");

                    b.Property<int>("Id_Client")
                        .HasColumnType("int");

                    b.Property<int>("Id_Product")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Orders_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Orders_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total_Order")
                        .HasColumnType("money");

                    b.HasKey("Id_Order");

                    b.HasIndex("Id_Accounting");

                    b.HasIndex("Id_Client");

                    b.HasIndex("Id_Product");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Permissions", b =>
                {
                    b.Property<int>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Rol"));

                    b.Property<string>("Permissions_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Rol");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Products", b =>
                {
                    b.Property<int>("Id_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Product"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_Product");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Sales", b =>
                {
                    b.Property<int>("Id_Sales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Sales"));

                    b.Property<int>("Id_Orders")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sale_Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Total_Sales")
                        .HasColumnType("real");

                    b.HasKey("Id_Sales");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Users", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PermissionsId_Rol")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_User");

                    b.HasIndex("PermissionsId_Rol");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.UsersAudit", b =>
                {
                    b.Property<int>("Id_UserAudit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_UserAudit"));

                    b.Property<int>("AccountingId_Accounting")
                        .HasColumnType("int");

                    b.Property<int>("Id_Accounting")
                        .HasColumnType("int");

                    b.Property<string>("UserAudit_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_UserAudit");

                    b.HasIndex("AccountingId_Accounting");

                    b.ToTable("UsersAudit");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Accounting", b =>
                {
                    b.HasOne("Proyecto_Licorera_Corchos.web.Data.Entities.Modifications", "Modifications")
                        .WithMany()
                        .HasForeignKey("ModificationsId_Modification")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modifications");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Orders", b =>
                {
                    b.HasOne("Proyecto_Licorera_Corchos.web.Data.Entities.Accounting", "Accounting")
                        .WithMany()
                        .HasForeignKey("Id_Accounting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Licorera_Corchos.web.Data.Entities.Clients", "Clients")
                        .WithMany()
                        .HasForeignKey("Id_Client")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Licorera_Corchos.web.Data.Entities.Products", "Products")
                        .WithMany()
                        .HasForeignKey("Id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounting");

                    b.Navigation("Clients");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.Users", b =>
                {
                    b.HasOne("Proyecto_Licorera_Corchos.web.Data.Entities.Permissions", "Permissions")
                        .WithMany()
                        .HasForeignKey("PermissionsId_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Proyecto_Licorera_Corchos.web.Data.Entities.UsersAudit", b =>
                {
                    b.HasOne("Proyecto_Licorera_Corchos.web.Data.Entities.Accounting", "Accounting")
                        .WithMany()
                        .HasForeignKey("AccountingId_Accounting")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounting");
                });
#pragma warning restore 612, 618
        }
    }
}
